version: '3.9'

services:
  postgres:
    image: postgres:14.6
    container_name: spring_postgresql_db
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: security
      POSTGRES_USER: postgres
      PGDATA: /data/postgres
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres -d security' ]
      interval: 5s #10
      timeout: 3s #5
      retries: 5
    volumes:
      - spring_postgresql:/data/postgres
      # postgres    ->    /var/lib/postgresql/data
      # mongo       ->    /data/db
      # mysql       ->    /var/lib/mysql
      # mariadb     ->    /var/lib/mysql

  pgadmin:
    image: dpage/pgadmin4
    # image: dpage/pgadmin4:7.4
    container_name: spring1_postgresql_db_pgadmin
    depends_on:
      postgres:
        condition: service_healthy # Wait for the health check
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '8090:80'
    volumes:
      - spring_pgadmin:/var/lib/pgadmin

    # Connection: localhost:8090  <--  localhost because they are on the same network
    # host: postgres
    # user: postgres

  mysql:
    image: mysql:8.0.33
    restart: always
    container_name: spring_mysql_db
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=spring_mysql
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=root
    volumes:
      - spring_mysql:/var/lib/mysql
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost' ]
      interval: 5s
      timeout: 3s
      retries: 5

  phpmyadmin-service:
    image: phpmyadmin/phpmyadmin:5.1.3
    container_name: phpmyadmin-mysql
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
      PMA_ARBITRARY: 1
      PMA_PORT: 3306
    links:
      - 'mysql:db'
    ports:
      - '8070:80'
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  spring_postgresql:
    external: false
  spring_pgadmin:
    external: false
  spring_mysql:
    external: false

# if external is true, create the required volumes:   `docker volume create spring_postgresql`
