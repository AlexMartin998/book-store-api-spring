version: '3.9'

services:
  postgres:
    image: postgres:14.6
    container_name: spring_postgresql_db
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      PGDATA: /data/postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    container_name: spring_app
    image: spring_app:1.0.0
    build: .
    ports:
      - '8085:8080'
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - APP_PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
      # mysql:
      #   condition: service_healthy

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: spring_boot_postgresql_db_pgadmin
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - '8090:80'
  #   volumes:
  #     - spring_pgadmin:/var/lib/pgadmin

  # mysql:
  #   image: mysql:8.0.33
  #   restart: always
  #   container_name: spring_mysql_db
  #   ports:
  #     - '3306:3306'
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #     - MYSQL_DATABASE=spring_mysql
  #     - MYSQL_USER=admin
  #     - MYSQL_PASSWORD=root
  #   volumes:
  #     - spring_mysql:/var/lib/mysql
  #   healthcheck:
  #     test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5

  # phpmyadmin-service:
  #   image: phpmyadmin/phpmyadmin:5.1.3
  #   container_name: phpmyadmin-mysql
  #   restart: always
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_USER: root
  #     PMA_PASSWORD: root
  #     PMA_ARBITRARY: 1
  #     PMA_PORT: 3306
  #   links:
  #     - 'mysql:db'
  #   ports:
  #     - '8070:80'
  #   depends_on:
  #     mysql:
  #       condition: service_healthy

volumes:
  spring_postgresql:
    external: false
  spring_pgadmin:
    external: false
  spring_mysql:
    external: false
